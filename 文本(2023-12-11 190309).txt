const int analogPin = A0; // 模拟输入引脚const float referenceVoltage = 5.0; // Arduino的参考电压（单位：伏特）class TestPoint;double GetU(double V1, double V2);double GetR(TestPoint TP1, TestPoint TP3);double GetC(TestPoint TP1, TestPoint TP3);double GetNPN(TestPoint TP1, TestPoint TP2, TestPoint TP3);class TestPoint{  public:    TestPoint(int R1_pin, int R2_pin, int ADC_Pin)    {      this -> R1_pin = R1_pin;      this -> R2_pin = R2_pin;      this -> ADC_Pin = ADC_Pin;      pinMode(R1_pin, OUTPUT);      pinMode(R2_pin, OUTPUT);      pinMode(ADC_Pin, INPUT);    }    void SetState(int TPState)//设置TestPoint状态,1 for HIGH_R1,2 for LOW_R1, 3 for HIGH_R2, 4 for LOW_R2, 5 for HIGH_R0, 6 for LOW_R0    {      switch(TPState)      {        case(1):    //HIGH_R1        {          pinMode(R1_pin, OUTPUT);          digitalWrite(R1_pin, HIGH);          pinMode(R2_pin, INPUT);          pinMode(ADC_Pin,INPUT);          break;        }        case(2):      //LOW_R1        {          pinMode(R1_pin,OUTPUT);          digitalWrite(R1_pin,LOW);          pinMode(R2_pin,INPUT);          pinMode(ADC_Pin,INPUT);          break;        }        case(3):      //HIGH_R2        {          pinMode(R1_pin, INPUT);          pinMode(R2_pin, OUTPUT);          digitalWrite(R2_pin, HIGH);          pinMode(ADC_Pin, INPUT);          break;        }        case(4):      //LOW_R2        {          pinMode(R1_pin,INPUT);          pinMode(R2_pin,OUTPUT);          digitalWrite(R2_pin, LOW);          pinMode(ADC_Pin,INPUT);           break;        }        case(5):      //HIGH_R0        {          pinMode(R1_pin, INPUT);          pinMode(R2_pin, INPUT);          pinMode(ADC_Pin, OUTPUT);          digitalWrite(ADC_Pin, HIGH);          break;        }        case(6):      //LOW_R0        {          pinMode(R1_pin, INPUT);          pinMode(R2_pin, INPUT);          pinMode(ADC_Pin, OUTPUT);          digitalWrite(ADC_Pin, LOW);          break;        }      }    }    int analogRead()//读取TP电压ADC原始值，范围0-1023    {      return :: analogRead(ADC_Pin);    }    double ReadVoltage()//读取TP电压值，范围0-5V    {      int rawValue = analogRead();      return rawValue * (5.0 / 1023.0);    }  private:    int R1_pin, R2_pin, ADC_Pin;};//TP1,TP2,TP3实例化TestPoint TP1(2,3,A0);TestPoint TP2(4,5,A1);TestPoint TP3(6,7,A2);void setup() {  Serial.begin(9600); // 初始化串口通信}double GetU(double V1, double V2){  if (V1 > V2) return V1 - V2;  else return V2 - V1; }double GetR(TestPoint TP1, TestPoint TP3){  TP1.SetState(1);  // TP3.SetState(2);  TP3.SetState(2);  double V1 = TP1.ReadVoltage();  // double V3 = TP3.ReadVoltage();  double V3 = TP3.ReadVoltage();  double Vx = GetU(V1, V3);  double Rx;  Rx = Vx * 2 * 1000 /(5 - Vx);  // return Rx;}double GetC(TestPoint TP1, TestPoint TP3){  TP1.SetState(2);  TP3.SetState(2);  double V1 = TP1.ReadVoltage();  double V3 = TP3.ReadVoltage();  double Vx = GetU(V1, V3);  while (Vx > 0.1){    V1 = TP1.ReadVoltage();    V3 = TP3.ReadVoltage();    Vx = GetU(V1, V3);  }  TP1.SetState(1);  TP3.SetState(2);  double timeStart = micros();  while(Vx < 0.632*5){    V1 = TP1.ReadVoltage();    V3 = TP3.ReadVoltage();    // Serial.println(V1);    // Serial.println(V3);    Vx = GetU(V1, V3);  }  double timeEnd = micros();  double time = timeEnd - timeStart;  double Cx = time / 2 / 1000;  return Cx;}double GetNPN(TestPoint TP1, TestPoint TP2, TestPoint TP3){  TP1.SetState(1);  TP2.SetState(3);  TP3.SetState(2);  double Vb=TP2.ReadVoltage();  double Ve=TP3.ReadVoltage();  int Rc = 1000;  int Re = 1000;  int Rb = 1000000;  double Ib = (5-Vb)/Rb;  double Ie = Ve/Re;  double beta = Ie/Ib;  Serial.print("Ib: ");  Serial.print(Ib,6);  Serial.print("  Ie:  ");  Serial.print(Ie,6);  Serial.print("  beta:  ");  Serial.println(beta,6);}void loop() {  // //电阻  Serial.print("Rx: ");  Serial.print(GetR(TP1,TP3));  Serial.println(" ou");  // //电容  // Serial.print("Cx: ");  // Serial.print(GetC(TP1, TP3));  // Serial.println(" uF");  // GetNPN(TP1, TP2, TP3);  delay(1000); // 延迟1秒，避免串口输出过于频繁}